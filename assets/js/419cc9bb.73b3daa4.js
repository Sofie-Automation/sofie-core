"use strict";(self.webpackChunksofie_documentation=self.webpackChunksofie_documentation||[]).push([[5182],{55940:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"for-developers/libraries","title":"Applications & Libraries","description":"List of all repositories related to Sofie","source":"@site/versioned_docs/version-1.51.0/for-developers/libraries.md","sourceDirName":"for-developers","slug":"/for-developers/libraries","permalink":"/sofie-core/docs/1.51.0/for-developers/libraries","draft":false,"unlisted":false,"editUrl":"https://github.com/Sofie-Automation/sofie-core/edit/main/packages/documentation/versioned_docs/version-1.51.0/for-developers/libraries.md","tags":[],"version":"1.51.0","sidebarPosition":5,"frontMatter":{"description":"List of all repositories related to Sofie","sidebar_position":5},"sidebar":"forDevelopers","previous":{"title":"TSR Types","permalink":"/sofie-core/docs/1.51.0/for-developers/device-integrations/tsr-types"},"next":{"title":"API Documentation","permalink":"/sofie-core/docs/1.51.0/for-developers/api-documentation"}}');var r=s(62540),t=s(43023);const o={description:"List of all repositories related to Sofie",sidebar_position:5},a="Applications & Libraries",l={},c=[{value:"Main Application",id:"main-application",level:2},{value:"Gateways and Services",id:"gateways-and-services",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Other Sofie-related Repositories",id:"other-sofie-related-repositories",level:2}];function h(e){const i={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"applications--libraries",children:"Applications & Libraries"})}),"\n",(0,r.jsx)(i.h2,{id:"main-application",children:"Main Application"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core",children:(0,r.jsx)(i.strong,{children:"Sofie\xa0Core"})})," is the main application that serves the web GUI and handles the core logic."]}),"\n",(0,r.jsx)(i.h2,{id:"gateways-and-services",children:"Gateways and Services"}),"\n",(0,r.jsxs)(i.p,{children:["Together with the ",(0,r.jsx)(i.em,{children:"Sofie\xa0Core"})," there are several ",(0,r.jsx)(i.em,{children:"gateways"})," which are separate applications, but which connect to ",(0,r.jsx)(i.em,{children:"Sofie\xa0Core"})," and are managed from within the Core's web UI."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core/tree/main/packages/playout-gateway",children:(0,r.jsx)(i.strong,{children:"Playout Gateway"})})," Handles the playout from ",(0,r.jsx)(i.em,{children:"Sofie"}),". Connects to and controls a multitude of devices, such as vision mixers, graphics, light controllers, audio mixers etc.."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core/tree/main/packages/mos-gateway",children:(0,r.jsx)(i.strong,{children:"MOS Gateway"})})," Connects ",(0,r.jsx)(i.em,{children:"Sofie"})," to a newsroom system (NRCS) and ingests rundowns via the ",(0,r.jsx)(i.a,{href:"http://mosprotocol.com/",children:"MOS protocol"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core/tree/main/packages/live-status-gateway",children:(0,r.jsx)(i.strong,{children:"Live Status Gateway"})})," Allows external systems to subscribe to state changes in Sofie."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/tv2/inews-ftp-gateway",children:(0,r.jsx)(i.strong,{children:"iNEWS Gateway"})})," Connects ",(0,r.jsx)(i.em,{children:"Sofie"})," to an Avid iNEWS newsroom system."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV/spreadsheet-gateway",children:(0,r.jsx)(i.strong,{children:"Spreadsheet Gateway"})})," Connects ",(0,r.jsx)(i.em,{children:"Sofie"})," to a ",(0,r.jsx)(i.em,{children:"Google Drive"})," folder and ingests rundowns from ",(0,r.jsx)(i.em,{children:"Google Sheets"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-input-gateway",children:(0,r.jsx)(i.strong,{children:"Input Gateway"})})," Connects ",(0,r.jsx)(i.em,{children:"Sofie"})," to various input devices, allowing triggering ",(0,r.jsx)(i.em,{children:"User-Actions"})," using these devices."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-package-manager",children:(0,r.jsx)(i.strong,{children:"Package Manager"})})," Handles media asset transfer and media file management for pulling new files, deleting expired files on playout devices and generating additional metadata (previews, thumbnails, automated QA checks) in a more performant, and possibly distributed, way. Can smartly figure out how to get a file on storage A to playout server B."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"libraries",children:"Libraries"}),"\n",(0,r.jsx)(i.p,{children:"There are a number of libraries used in the Sofie ecosystem:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-atem-connection",children:(0,r.jsx)(i.strong,{children:"ATEM Connection"})})," Library for communicating with Blackmagic Design's ATEM mixers"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-atem-state",children:(0,r.jsx)(i.strong,{children:"ATEM State"})})," Used in TSR to tracks the state of ATEMs and generate commands to control them."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV/casparcg-connection",children:(0,r.jsx)(i.strong,{children:"CasparCG\xa0Server Connection"})})," developed by ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV",children:(0,r.jsx)(i.em,{children:"SuperFly.tv"})})})," Library to connect and interact with CasparCG\xa0Servers."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/superflytv/casparcg-state",children:(0,r.jsx)(i.strong,{children:"CasparCG State"})})," developed by ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV",children:(0,r.jsx)(i.em,{children:"SuperFly.tv"})})})," Used in TSR to tracks the state of CasparCG\xa0Servers and generate commands to control them."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-emberplus-connection",children:(0,r.jsx)(i.strong,{children:"Ember+ Connection"})})," Library to communicate with ",(0,r.jsx)(i.em,{children:"Ember+"})," control protocol"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-hyperdeck-connection",children:(0,r.jsx)(i.strong,{children:"HyperDeck Connection"})})," Library for connecting to Blackmagic Design's HyperDeck recorders."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-mos-connection/",children:(0,r.jsx)(i.strong,{children:"MOS Connection"})})," A ",(0,r.jsx)(i.a,{href:"http://mosprotocol.com/",children:(0,r.jsx)(i.em,{children:"MOS protocol"})})," library for acting as a MOS device and connecting to an newsroom control system."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-quantel-gateway-client",children:(0,r.jsx)(i.strong,{children:"Quantel Gateway Client"})})," An interface that talks to the Quantel-Gateway application."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core-integration",children:(0,r.jsx)(i.strong,{children:"Sofie\xa0Core Integration"})})," Used to connect to the ",(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-core",children:"Sofie\xa0Core"})," by the Gateways."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://www.npmjs.com/package/@sofie-automation/blueprints-integration",children:(0,r.jsx)(i.strong,{children:"Sofie Blueprints Integration"})})," Common types and interfaces used by both Sofie\xa0Core and the user-defined blueprints."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV/supertimeline",children:(0,r.jsx)(i.strong,{children:"SuperFly-Timeline"})})," developed by ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://github.com/SuperFlyTV",children:(0,r.jsx)(i.em,{children:"SuperFly.tv"})})})," Resolver and rules for placing objects on a virtual timeline."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/nytamin/threadedClass",children:(0,r.jsx)(i.strong,{children:"ThreadedClass"})})," developed by ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"https://github.com/nytamin",children:(0,r.jsx)(i.em,{children:"Nytamin"})})})," Used in TSR to spawn device controllers in separate processes."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-timeline-state-resolver",children:(0,r.jsx)(i.strong,{children:"Timeline State Resolver"})})," (TSR) The main driver in ",(0,r.jsx)(i.strong,{children:"Playout Gateway,"})," handles connections to playout-devices and sends commands based on a ",(0,r.jsx)(i.strong,{children:"Timeline"})," received from ",(0,r.jsx)(i.strong,{children:"Core"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"There are also a few typings-only libraries that define interfaces between applications:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://www.npmjs.com/package/@sofie-automation/blueprints-integration",children:(0,r.jsx)(i.strong,{children:"Blueprints Integration"})})," Defines the interface between ",(0,r.jsx)(i.a,{href:"/sofie-core/docs/1.51.0/user-guide/concepts-and-architecture#blueprints",children:(0,r.jsx)(i.strong,{children:"Blueprints"})})," and ",(0,r.jsx)(i.strong,{children:"Sofie\xa0Core"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://www.npmjs.com/package/timeline-state-resolver-types",children:(0,r.jsx)(i.strong,{children:"Timeline State Resolver types"})})," Defines the interface between ",(0,r.jsx)(i.a,{href:"/sofie-core/docs/1.51.0/user-guide/concepts-and-architecture#blueprints",children:(0,r.jsx)(i.strong,{children:"Blueprints"})})," and the timeline that will be fed into ",(0,r.jsx)(i.strong,{children:"TSR"})," for playout."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"other-sofie-related-repositories",children:"Other Sofie-related Repositories"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsxs)(i.a,{href:"https://github.com/nrkno/sofie-casparcg-server",children:[(0,r.jsx)(i.strong,{children:"CasparCG\xa0Server"})," (NRK fork)"]})," Sofie-specific fork of CasparCG\xa0Server."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-casparcg-launcher",children:(0,r.jsx)(i.strong,{children:"CasparCG Launcher"})})," Launcher, controller, and logger for CasparCG\xa0Server."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsxs)(i.a,{href:"https://github.com/nrkno/sofie-casparcg-server",children:[(0,r.jsx)(i.strong,{children:"CasparCG Media Scanner"})," (NRK fork)"]})," Sofie-specific fork of CasparCG\xa0Server 2.2 Media\xa0Scanner."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-chef",children:(0,r.jsx)(i.strong,{children:"Sofie Chef"})})," A simple Chromium based renderer, used for kiosk mode rendering of web pages."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/nrkno/sofie-media-management",children:(0,r.jsx)(i.strong,{children:"Media Manager"})})," ",(0,r.jsx)(i.em,{children:"(deprecated)"})," Handles media transfer and media file management for pulling new files and deleting expired files on playout devices."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-quantel-browser-plugin",children:(0,r.jsx)(i.strong,{children:"Quantel Browser Plugin"})})," MOS-compatible Quantel video clip browser for use with Sofie."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/nrkno/sofie-sisyfos-audio-controller",children:(0,r.jsx)(i.strong,{children:"Sisyfos Audio Controller"})})," ",(0,r.jsxs)(i.em,{children:["developed by ",(0,r.jsx)(i.a,{href:"https://github.com/olzzon/",children:(0,r.jsx)(i.em,{children:"olzzon"})})]})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://github.com/Sofie-Automation/sofie-quantel-gateway",children:(0,r.jsx)(i.strong,{children:"Quantel Gateway"})})," CORBA to REST gateway for ",(0,r.jsx)(i.em,{children:"Quantel/ISA"})," playback."]}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},43023:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var n=s(63696);const r={},t=n.createContext(r);function o(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);
$segment-timeline-background-color: #1f1f1f;

$segment-layer-background-unknown: #4b4b4b;
$segment-layer-background-camera: #18791c;
$segment-layer-background-camera--second: darken($segment-layer-background-camera, 10%);
$segment-layer-background-lower-third: #ed7200;
$segment-layer-background-lower-third--second: darken($segment-layer-background-lower-third, 10%);
$segment-layer-background-graphics: #dc5c00;
$segment-layer-background-graphics--second: darken($segment-layer-background-graphics, 10%);
$segment-layer-background-live-speak: #0085ff;
$segment-layer-background-live-speak--second: darken($segment-layer-background-live-speak, 10%);
$segment-layer-background-remote: #e80064;
$segment-layer-background-remote--second: darken($segment-layer-background-remote, 10%);
$segment-layer-background-vt: #0a20ed;
$segment-layer-background-vt--second: darken($segment-layer-background-vt, 10%);
$segment-layer-background-script: #003600;
$segment-layer-background-mic: #1e6820;
$segment-layer-background-guest: #008a92;
$segment-layer-background-local: #ba00e8;
$segment-layer-background-local--second: darken($segment-layer-background-local, 10%);

$layer-types: 'unknown', 'camera', 'lower-third', 'graphics', 'live-speak', 'remote', 'vt', 'local', 'script', 'mic',
	'guest';

@mixin item-type-text-outline($selectors) {
	@each $layer-type in $layer-types {
		&.#{$layer-type} {
			#{$selectors} {
				text-shadow: 1px -1px 1px var(--segment-layer-background-#{$layer-type}),
					-1px 1px 1px var(--segment-layer-background-#{$layer-type}),
					-1px -1px 1px var(--segment-layer-background-#{$layer-type}),
					1px 1px 1px var(--segment-layer-background-#{$layer-type}), 1px 1px 3px rgba(0, 0, 0, 1),
					1px 1px 8px rgba(0, 0, 0, 1);
			}

			&.second {
				#{$selectors} {
					text-shadow: 1px -1px 1px var(--segment-layer-background-#{$layer-type}--second),
						-1px 1px 1px var(--segment-layer-background-#{$layer-type}--second),
						-1px -1px 1px var(--segment-layer-background-#{$layer-type}--second),
						1px 1px 1px var(--segment-layer-background-#{$layer-type}--second), 1px 1px 3px rgba(0, 0, 0, 1),
						1px 1px 8px rgba(0, 0, 0, 1);
				}
			}
		}
	}
}

@mixin item-type-colors {
	@each $layer-type in $layer-types {
		&.#{$layer-type} {
			background: var(--segment-layer-background-#{$layer-type});

			&.second {
				background: var(--segment-layer-background-#{$layer-type}--second);
			}
		}
	}
}

@mixin piece-colors {
	&:not(.super-infinite) {
		@include item-type-colors();

		&.disabled {
			background: $segment-item-disabled-background;
			color: $segment-item-disabled-color;
		}
	}

	&.super-infinite {
		@each $layer-type in $layer-types {
			&.#{$layer-type} {
				--infinite-piece-background-image: linear-gradient(
					to bottom,
					var(--segment-layer-background-#{$layer-type}),
					var(--segment-layer-background-#{$layer-type}) var(--infinite-piece-background-line-height, 4px),
					transparent var(--infinite-piece-background-line-height, 4px)
				);
				--infinite-piece-background-image--second: linear-gradient(
					to bottom,
					var(--segment-layer-background-#{$layer-type}--second),
					var(--segment-layer-background-#{$layer-type}--second) var(--infinite-piece-background-line-height, 4px),
					transparent var(--infinite-piece-background-line-height, 4px)
				);

				background: none;
				background-image: var(--infinite-piece-background-image);
				background-size: 1px var(--segment-layer-height), 0 0;
				background-repeat: repeat-x, no-repeat;
				background-position: 0 0, 0 0;

				&.second {
					background-image: var(--infinite-piece-background-image--second);
					background-size: 1px var(--segment-layer-height), 0 0;
					background-repeat: repeat-x, no-repeat;
					background-position: 0 0, 0 0;
				}
			}

			&.disabled {
				--infinite-piece-background-image: linear-gradient(
					to bottom,
					#{$segment-item-disabled-background},
					#{$segment-item-disabled-background} var(--infinite-piece-background-line-height, 4px),
					transparent var(--infinite-piece-background-line-height, 4px)
				);

				color: $segment-item-disabled-color;
			}
		}

		&.infinite-starts {
			padding-left: calc(var(--segment-layer-height) / 2);

			@each $layer-type in $layer-types {
				&.#{$layer-type} {
					--infinite-piece-starts-background-image: linear-gradient(
						135deg,
						var(--segment-layer-background-#{$layer-type}),
						var(--segment-layer-background-#{$layer-type}) calc(var(--segment-layer-height) / 2),
						transparent calc(var(--segment-layer-height) / 2)
					);

					background: none;
					background-image: var(--infinite-piece-background-image), var(--infinite-piece-starts-background-image);
					background-size: 1px var(--segment-layer-height), var(--segment-layer-height) var(--segment-layer-height);
					background-repeat: repeat-x, no-repeat;

					&.second {
						--infinite-piece-starts-background-image: linear-gradient(
							135deg,
							var(--segment-layer-background-#{$layer-type}--second),
							var(--segment-layer-background-#{$layer-type}--second) calc(var(--segment-layer-height) / 2),
							transparent calc(var(--segment-layer-height) / 2)
						);

						background-image: var(--infinite-piece-background-image--second),
							var(--infinite-piece-starts-background-image);
						background-size: 1px var(--segment-layer-height), var(--segment-layer-height) var(--segment-layer-height);
						background-repeat: repeat-x, no-repeat;
					}
				}
			}

			&.disabled {
				--infinite-piece-starts-background-image: linear-gradient(
					135deg,
					#{$segment-item-disabled-background},
					#{$segment-item-disabled-background} calc(var(--segment-layer-height) / 2),
					transparent calc(var(--segment-layer-height) / 2)
				);
				--infinite-piece-background-image: linear-gradient(
					to bottom,
					#{$segment-item-disabled-background},
					#{$segment-item-disabled-background} var(--infinite-piece-background-line-height, 4px),
					transparent var(--infinite-piece-background-line-height, 4px)
				);

				color: $segment-item-disabled-color;
			}
		}

		&.super-infinite:not(.infinite-starts) {
			opacity: 0.5;
		}

		&.not-in-vision {
			--not-in-vision-image: linear-gradient(
				to right,
				transparent,
				transparent 2px,
				#{$segment-timeline-background-color} 2px,
				#{$segment-timeline-background-color} 10px
			);
			opacity: 0.8;

			@each $layer-type in $layer-types {
				&.#{$layer-type} {
					background-image: var(--not-in-vision-image), none, var(--infinite-piece-background-image);
					background-size: 10px var(--infinite-piece-background-line-height, 4px), 0 0, 1px var(--segment-layer-height);
					background-repeat: repeat-x, no-repeat, repeat-x;
					background-position: 0 0, 0 0, 0 0;

					&.second {
						background-image: var(--not-in-vision-image), none, var(--infinite-piece-background-image--second);
						background-size: 10px var(--infinite-piece-background-line-height, 4px), 0 0,
							1px var(--segment-layer-height);
						background-repeat: repeat-x, no-repeat, repeat-x;
						background-position: 0 0, 0 0, 0 0;
					}
				}
			}

			&.infinite-starts {
				padding-left: calc(var(--segment-layer-height) / 2);

				@each $layer-type in $layer-types {
					&.#{$layer-type} {
						background-image: var(--not-in-vision-image), var(--infinite-piece-starts-background-image),
							var(--infinite-piece-background-image);
						background-size: 10px var(--infinite-piece-background-line-height, 4px),
							var(--segment-layer-height) var(--segment-layer-height), 1px var(--segment-layer-height);
						background-repeat: repeat-x, no-repeat, repeat-x;

						&.second {
							background-image: var(--not-in-vision-image), var(--infinite-piece-starts-background-image),
								var(--infinite-piece-background-image--second);
							background-size: 10px var(--infinite-piece-background-line-height, 4px),
								var(--segment-layer-height) var(--segment-layer-height), 1px var(--segment-layer-height);
							background-repeat: repeat-x, no-repeat, repeat-x;
						}
					}
				}
			}
		}

		@each $layer-type in $layer-types {
			&.#{$layer-type} {
				.segment-timeline__piece__label {
					color: var(--segment-layer-background-#{$layer-type});
				}

				&.second {
					.segment-timeline__piece__label {
						color: var(--segment-layer-background-#{$layer-type}--second);
					}
				}
			}
		}
	}
}

@mixin item-type-borders {
	@each $layer-type in $layer-types {
		&.#{$layer-type} {
			border-color: var(--segment-layer-background-#{$layer-type});
		}
	}
}

@mixin item-type-before-background {
	@each $layer-type in $layer-types {
		&.#{$layer-type}::before {
			background: var(--segment-layer-background-#{$layer-type});
		}
	}
}

@mixin item-type-colors-svg {
	@each $layer-type in $layer-types {
		&.#{$layer-type} {
			fill: var(--segment-layer-background-#{$layer-type});

			&.second {
				fill: var(--segment-layer-background-#{$layer-type}--second);
			}
		}
	}
}

@mixin invalid-overlay {
	&.invalid {
		opacity: 0.5;
		background-color: #333;
		background-image: repeating-linear-gradient(
				45deg,
				rgba(0, 0, 0, 0) 0%,
				rgba(0, 0, 0, 0) 5px,
				rgba(0, 0, 0, 1) 5px,
				rgba(0, 0, 0, 1) 10px
			),
			repeating-linear-gradient(
				-45deg,
				rgba(0, 0, 0, 0) 0%,
				rgba(0, 0, 0, 0) 5px,
				rgba(0, 0, 0, 1) 5px,
				rgba(0, 0, 0, 1) 10px
			);
	}
}

@mixin floated-overlay {
	$part-start-color: #a5a5a5;

	&.floated {
		background-image: repeating-linear-gradient(
			-45deg,
			transparent 0%,
			transparent 8px,
			darken($part-start-color, 50%) 8px,
			darken($part-start-color, 50%) 10px
		);
		backdrop-filter: saturate(0%) brightness(50%);
	}
}

@mixin missing-overlay {
	&.source-broken,
	&.source-missing {
		&::after {
			content: ' ';
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: 1;
			mix-blend-mode: normal;
			background-image: repeating-linear-gradient(
				45deg,
				transparent,
				transparent 10px,
				black 11px,
				black 15px,
				transparent 16px
			);
			opacity: 0.4;
		}
	}

	&.vt.source-broken,
	&.vt.source-missing {
		&::after {
			opacity: 0.6;
		}
	}

	&.source-broken {
		&::after {
			background-image: repeating-linear-gradient(
				-45deg,
				transparent,
				transparent 2px,
				rgba(0, 0, 0, 0.54) 3px,
				rgba(0, 0, 0, 0.54) 4px,
				transparent 5px
			);
		}
	}

	// Don't treat an unknown state as an issue
	/*  {
		background-blend-mode: overlay; 
		background-image: repeating-linear-gradient(
		45deg,
		transparent,
		transparent 10px,
		black 11px,
		black 15px,
		transparent 16px
		);
	} */
}

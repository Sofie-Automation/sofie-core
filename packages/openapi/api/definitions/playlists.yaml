title: playlists
description: Definitions for playlists API
resources:
  activate:
    post:
      operationId: activate
      tags:
        - playlists
      summary: Activates a Playlist.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to activate.
          required: true
          schema:
            type: string
      requestBody:
        description: Whether to activate into rehearsal mode.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rehearsal:
                  type: boolean
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: There is already an active Playlist for the studio that the Playlist belongs to.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  deactivate:
    post:
      operationId: deactivate
      tags:
        - playlists
      summary: Deactivates a Playlist.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to deactivate.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: The target Playlist is not currently active, there is no on-air Part or there has been a blueprint error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  executeAdLib:
    post:
      operationId: executeAdLib
      tags:
        - playlists
      summary: Executes the requested AdLib/AdLib Action. This is a "planned" AdLib (Action) that has been produced by the blueprints during the ingest process.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to execute adLib in.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actionType:
                  type: string
                  description: An actionType string to specify a particular variation for the AdLibAction, valid strings are to be read from the status API
                adLibId:
                  type: string
                  description: AdLib to execute
              required:
                - adLibId
              example:
                actionType: pvw
      responses:
        200:
          $ref: '#/components/responses/executeActionSuccess'
        412:
          description: Specified Playlist is not active, there is not an on-air Part instance or an adLib for the provided `adLibId` cannot be found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  moveNextPart:
    post:
      operationId: moveNextPart
      tags:
        - playlists
      summary: Moves the next point by `delta` places. Negative values are allowed to move "backwards" in the script.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to target.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delta:
                  type: number
                  description: Amount to move next point by (+/-). If delta results in an index that is greater than the number of Parts available, no action will be taken.
              required:
                - delta
      responses:
        200:
          description: Command successfully handled - returns a string with the new PartID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: number
                    example: 200
                  result:
                    type: string
                    example: '3Y9at66pZipxE8Kkn850LLV9Cz0_'
        412:
          description: Specified Playlist is not active or no next Part could be set (e.g. Playlist is empty, delta is too high and overflows the bounds of the Playlist)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  moveNextSegment:
    post:
      operationId: moveNextSegment
      tags:
        - playlists
      summary: Moves the next Segment point by `delta` places. Negative values are allowed to move "backwards" in the script.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to target.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delta:
                  type: number
                  description: Amount to move next Segment point by (+/-). If delta results in an index that is greater than the number of Segments available, no action will be taken.
              required:
                - delta
      responses:
        200:
          description: Command successfully handled - returns a string with the new PartID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: number
                    example: 200
                  result:
                    type: string
                    example: 'YjGd_1dWjta_E1ZuDaOczP1lsgk_'
        412:
          description: Specified Playlist is not active or there is no next Part set (e.g. Playlist is empty).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  reloadPlaylist:
    post:
      operationId: reloadPlaylist
      tags:
        - playlists
      summary: Reloads a Playlist from its ingest source (e.g. MOS/Spreadsheet etc.)
      parameters:
        - name: playlistId
          in: path
          description: Playlist to reload.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: The target Playlist does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  resetPlaylist:
    post:
      operationId: resetPlaylist
      tags:
        - playlists
      summary: Resets a Playlist back to its pre-played state.
      parameters:
        - name: playlistId
          in: path
          description: Playlist to reset.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: The target Playlist is currently active (reset while on-air can be enabled in core settings).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  setNextPart:
    post:
      operationId: setNextPart
      tags:
        - playlists
      summary: Sets the next Part to a given PartId.
      parameters:
        - name: playlistId
          in: path
          description: Target playlist.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                partId:
                  type: string
                  description: Part to set as next.
              required:
                - partId
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: Specified Playlist is not active, if the specified Part does not exist or if the specified Part is not playable.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  setNextSegment:
    post:
      operationId: setNextSegment
      tags:
        - playlists
      summary: Sets the next Segment to a given SegmentId.
      parameters:
        - name: playlistId
          in: path
          description: Target playlist.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                segmentId:
                  type: string
                  description: Segment to set as next.
              required:
                - segmentId
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: Specified Playlist is not active, if the specified Segment does not exist or if the specified Segment does not contain any playable parts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  take:
    post:
      operationId: take
      tags:
        - playlists
      summary: Performs a take in the given Playlist.
      parameters:
        - name: playlistId
          in: path
          description: Target playlist.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                fromPartInstanceId:
                  type: string
                  description: May be specified to ensure that multiple take requests from the same Part do not result in multiple takes.
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: Specified Playlist is not active or specified Playlist does not have a next Part.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  switchRouteSet:
    post:
      operationId: switchRouteSet
      tags:
        - playlists
      summary: Sets the state of a route set.
      parameters:
        - name: studioId
          in: path
          description: Target studio.
          required: true
          schema:
            type: string
        - name: routeSetId
          in: path
          description: Target route set.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                routeSetId:
                  type: string
                  description: Target route set.
                active:
                  type: boolean
                  description: Whether route set should be active.
              required:
                - routeSetId
                - active
      responses:
        200:
          $ref: '#/components/responses/postSuccess'
        412:
          description: Studio does not exist, or route set does not exist, or route set exists but cannot be deactivated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  responses:
    postSuccess:
      description: Action successfully sent
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: number
                example: 200
    executeActionSuccess:
      description: Command successfully handled - returns an object that informs whether a part was queued by the action and/or if the next part was automatically taken
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: number
                example: 200
              result:
                type: object
                properties:
                  queuedPartInstanceId:
                    type: string
                    example: 'YjGd_1dWjta_E1ZuDaOczP1lsgk_'
                  taken:
                    type: boolean
                    example: false
